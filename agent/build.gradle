plugins {
    id 'com.github.johnrengelman.shadow' version '2.0.4'
    id 'me.champeau.gradle.jmh' version '0.4.7'
    // 0.12*rc* drops requirement on native git, which might be useful
    id 'com.palantir.git-version' version '0.12.0-rc2'
    id 'java'
}

dependencies {
    compile project(':common')

    compile files("${projectDir}/../repack/asm-re-6.2.1.jar")
    testCompile 'org.apache.commons:commons-text:1.4'
    testCompile 'com.google.code.gson:gson:2.8.5'
    testCompile 'com.google.guava:guava:26.0-jre'
    testCompile 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testCompile 'org.junit.jupiter:junit-jupiter-params:5.3.1'
    testRuntime 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
    jmh 'com.google.guava:guava:26.0-jre'
}

def extended_version() {
    def ver = "git:" + gitVersion()
    def travis_build = System.getenv("TRAVIS_BUILD_NUMBER")
    if (travis_build) {
        ver += " travis:" + travis_build
    }

    ver
}

task versionTxt() << {
    final res = new File("$projectDir/src/main/resources")
    assert res.isDirectory() || res.mkdirs()
    new File(res, "version.txt").text = extended_version()
}

processResources.dependsOn versionTxt
build.dependsOn shadowJar

jar {
    manifest {
        attributes 'Extended-Version-Info': extended_version()
        attributes 'Premain-Class': 'io.snyk.agent.jvm.EntryPoint'
        attributes 'Can-Retransform-Classes': true
    }
}

shadowJar {
    mergeServiceFiles()

    classifier = null
    version = null
}

test {
    useJUnitPlatform()
}

jmh {
    // severely limit the time benchmarks take to run
    fork = 1
    iterations = 1
    warmupIterations = 1
}

repositories {
    mavenCentral()
    jcenter()
}
